name: Linux

on:
  # Trigger the workflow on push or pull requests, but only for the
  # master branch
  push:
    branches:
    - master
    - '*/ci'
  pull_request:
    branches:
    - master

jobs:
  autotools:
    name: ${{ matrix.build.name }}
    runs-on: 'ubuntu-latest'
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        build:
        - name: hyper
          install:
          configure: --with-openssl --with-hyper=$HOME/hyper

    steps:
    - run: sudo apt-get install libtool autoconf automake pkg-config
      name: install prereqs

    - run: (cd $HOME;
        git clone --depth=1 https://github.com/hyperium/hyper.git;
        curl https://sh.rustup.rs -sSf | sh -s -- -y;
        source $HOME/.cargo/env;
        cd $HOME/hyper;
        RUSTFLAGS="--cfg hyper_unstable_ffi" cargo build --features client,http1,http2,ffi)
      name: 'install hyper'

    - uses: actions/checkout@v2

    - run: ./buildconf && LDFLAGS="-Wl,-rpath,$HOME/hyper/target/debug" ./configure --enable-warnings --enable-werror ${{ matrix.build.configure }} && make
      name: 'configure and build'

    - run: make test-nonflaky
      name: 'test'
      env:
        LD_LIBRARY_PATH: $HOME/hyper/target/debug:/usr/local/lib
        TFLAGS: "${{ matrix.build.tflags }}"


    - name: Setup Node.js environment
       uses: actions/setup-node@v2.4.0
     with:

   # Set always-auth in npmrc
    always-auth: # optional, default is false
    # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
    node-version: # optional
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec
    check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN
    registry-url: # optional
    # Optional scope for authenticating against scoped registries
    scope: # optional
    # Used to pull node distributions from node-versions.  Since there's a default, this is typically not supplied by the user.
    token: # optional, default is ${{ github.token }}
    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm
    cache: # optional
    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
    # Deprecated. Use node-version instead. Will not be supported after October 1, 2019
    version: # optional
